#ifndef CUBE_H
#define CUBE_H

#include <smol.h>

static const sl_vertex_3d_t cube_vertices[6 * 4] =
{
    // Front (Z = +1)
    { { -1, -1,  1 }, { 0, 0 }, { 0, 0,  1 }, SL_BLUE },
    { {  1, -1,  1 }, { 1, 0 }, { 0, 0,  1 }, SL_BLUE },
    { {  1,  1,  1 }, { 1, 1 }, { 0, 0,  1 }, SL_BLUE },
    { { -1,  1,  1 }, { 0, 1 }, { 0, 0,  1 }, SL_BLUE },

    // Back (Z = -1)
    { {  1, -1, -1 }, { 0, 0 }, { 0, 0, -1 }, SL_BLUE },
    { { -1, -1, -1 }, { 1, 0 }, { 0, 0, -1 }, SL_BLUE },
    { { -1,  1, -1 }, { 1, 1 }, { 0, 0, -1 }, SL_BLUE },
    { {  1,  1, -1 }, { 0, 1 }, { 0, 0, -1 }, SL_BLUE },

    // Left (X = -1)
    { { -1, -1, -1 }, { 0, 0 }, { -1, 0, 0 }, SL_RED },
    { { -1, -1,  1 }, { 1, 0 }, { -1, 0, 0 }, SL_RED },
    { { -1,  1,  1 }, { 1, 1 }, { -1, 0, 0 }, SL_RED },
    { { -1,  1, -1 }, { 0, 1 }, { -1, 0, 0 }, SL_RED },

    // Right (X = +1)
    { {  1, -1,  1 }, { 0, 0 }, { 1, 0, 0 }, SL_RED },
    { {  1, -1, -1 }, { 1, 0 }, { 1, 0, 0 }, SL_RED },
    { {  1,  1, -1 }, { 1, 1 }, { 1, 0, 0 }, SL_RED },
    { {  1,  1,  1 }, { 0, 1 }, { 1, 0, 0 }, SL_RED },

    // Up (Y = +1)
    { { -1,  1,  1 }, { 0, 0 }, { 0, 1, 0 }, SL_GREEN },
    { {  1,  1,  1 }, { 1, 0 }, { 0, 1, 0 }, SL_GREEN },
    { {  1,  1, -1 }, { 1, 1 }, { 0, 1, 0 }, SL_GREEN },
    { { -1,  1, -1 }, { 0, 1 }, { 0, 1, 0 }, SL_GREEN },

    // Down (Y = -1)
    { { -1, -1, -1 }, { 0, 0 }, { 0, -1, 0 }, SL_GREEN },
    { {  1, -1, -1 }, { 1, 0 }, { 0, -1, 0 }, SL_GREEN },
    { {  1, -1,  1 }, { 1, 1 }, { 0, -1, 0 }, SL_GREEN },
    { { -1, -1,  1 }, { 0, 1 }, { 0, -1, 0 }, SL_GREEN },
};

static const uint16_t cube_indices[6 * 6] =
{
    // Front (0–3)
    0, 1, 2,
    0, 2, 3,

    // Back (4–7)
    4, 5, 6,
    4, 6, 7,

    // Left (8–11)
    8, 9, 10,
    8, 10, 11,

    // Right (12–15)
    12, 13, 14,
    12, 14, 15,

    // Up (16–19)
    16, 17, 18,
    16, 18, 19,

    // Down (20–23)
    20, 21, 22,
    20, 22, 23,
};

#endif // CUBE_H
